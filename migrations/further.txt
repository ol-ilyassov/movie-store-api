
# run migrations on application launch.

# imports:

"github.com/golang-migrate/migrate/v4"
"github.com/golang-migrate/migrate/v4/database/postgres" 
_ "github.com/golang-migrate/migrate/v4/source/file"

# code:

migrationDriver, err := postgres.WithInstance(db, &postgres.Config{})
    if err != nil {
    logger.Error(err.Error())
    os.Exit(1)
}
migrator, err := migrate.NewWithDatabaseInstance("file:///path/to/your/migrations", "postgres", migrationDriver)
    if err != nil {
    logger.Error(err.Error())
    os.Exit(1)
}
err = migrator.Up()
    if err != nil && err != migrate.ErrNoChange {
    logger.Error(err.Error())
    os.Exit(1)
}
logger.Info("database migrations applied")

# further: 
# - could be made with embedding.
# - discussion on in-made migrations on application launch:
# => https://pythonspeed.com/articles/schema-migrations-server-startup/
